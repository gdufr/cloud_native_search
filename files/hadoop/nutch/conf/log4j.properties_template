# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements. See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Define some default values that can be overridden by system properties
hadoop.log.dir=.
hadoop.log.file=hadoop.log


# Direct log messages to a log file
#log4j.appender.file=org.apache.log4j.RollingFileAppender
#log4j.appender.file.File=/var/log/nutch.log
#log4j.appender.file.MaxFileSize=10MB
#log4j.appender.file.MaxBackupIndex=1
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

# RootLogger - DailyRollingFileAppender
log4j.rootLogger=${log_level},DRFA

# Logging Threshold
log4j.threshold=ALL

#special logging requirements for some commandline tools
log4j.logger.org.apache.nutch.crawl.CrawlDb=${log_level},cmdstdout
log4j.logger.org.apache.nutch.crawl.CrawlDbMerger=${log_level},cmdstdout
log4j.logger.org.apache.nutch.crawl.CrawlDbReader=${log_level},cmdstdout
log4j.logger.org.apache.nutch.crawl.Crawl=${log_level},cmdstdout
log4j.logger.org.apache.nutch.crawl.DeduplicationJob=${log_level},cmdstdout
log4j.logger.org.apache.nutch.crawl.Generator=${log_level},cmdstdout
log4j.logger.org.apache.nutch.crawl.Injector=${log_level},cmdstdout
log4j.logger.org.apache.nutch.crawl.LinkDb=${log_level},cmdstdout
log4j.logger.org.apache.nutch.crawl.LinkDbMerger=${log_level},cmdstdout
log4j.logger.org.apache.nutch.crawl.LinkDbReader=${log_level},cmdstdout
log4j.logger.org.apache.nutch.fetcher.Fetcher=${log_level},cmdstdout
log4j.logger.org.apache.nutch.fetcher.FetcherItem=${log_level},cmdstdout
log4j.logger.org.apache.nutch.fetcher.FetcherItemQueue=${log_level},cmdstdout
log4j.logger.org.apache.nutch.fetcher.FetcherItemQueues=${log_level},cmdstdout
log4j.logger.org.apache.nutch.fetcher.FetcherThread=${log_level},cmdstdout
log4j.logger.org.apache.nutch.fetcher.QueueFeeder=${log_level},cmdstdout
log4j.logger.org.apache.nutch.hostdb.UpdateHostDb=${log_level},cmdstdout
log4j.logger.org.apache.nutch.hostdb.ReadHostDb=${log_level},cmdstdout
log4j.logger.org.apache.nutch.indexer.IndexingFiltersChecker=${log_level},cmdstdout
log4j.logger.org.apache.nutch.indexer.IndexingJob=${log_level},cmdstdout
log4j.logger.org.apache.nutch.indexer.IndexerOutputFormat=${log_level},cmdstdout
log4j.logger.org.apache.nutch.indexwriter.solr.SolrIndexWriter=${log_level},cmdstdout
log4j.logger.org.apache.nutch.indexwriter.solr.SolrUtils=${log_level},cmdstdout
log4j.logger.org.apache.nutch.exchange.Exchanges=${log_level},cmdstdout
log4j.logger.org.apache.nutch.parse.ParserChecker=${log_level},cmdstdout
log4j.logger.org.apache.nutch.parse.ParseSegment=${log_level},cmdstdout
log4j.logger.org.apache.nutch.plugin.PluginRepository=${log_level}
log4j.logger.org.apache.nutch.protocol.RobotRulesParser=${log_level},cmdstdout
log4j.logger.org.apache.nutch.scoring.webgraph.LinkRank=${log_level},cmdstdout
log4j.logger.org.apache.nutch.scoring.webgraph.Loops=${log_level},cmdstdout
log4j.logger.org.apache.nutch.scoring.webgraph.ScoreUpdater=${log_level},cmdstdout
log4j.logger.org.apache.nutch.scoring.webgraph.WebGraph=${log_level},cmdstdout
log4j.logger.org.apache.nutch.scoring.webgraph.NodeDumper=${log_level},cmdstdout
log4j.logger.org.apache.nutch.segment.SegmentChecker=${log_level},cmdstdout
log4j.logger.org.apache.nutch.segment.SegmentMerger=${log_level},cmdstdout
log4j.logger.org.apache.nutch.segment.SegmentReader=${log_level},cmdstdout
log4j.logger.org.apache.nutch.tools.FreeGenerator=${log_level},cmdstdout
log4j.logger.org.apache.nutch.util.domain.DomainStatistics=${log_level},cmdstdout
log4j.logger.org.apache.nutch.util.SitemapProcessor=${log_level},cmdstdout

# Use this if we want to get more information into Prometheus
#   log4j.logger.org.apache.nutch=${log_level}
log4j.logger.org.apache.nutch=${log_level}

log4j.logger.org.apache.hadoop=WARN
# log mapreduce job messages and counters
log4j.logger.org.apache.hadoop.mapreduce.Job=${log_level}

#
# Daily Rolling File Appender
#

log4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender

# Rollover at midnight
log4j.appender.DRFA.DatePattern=.yyyy-MM-dd

# 30-day backup
#log4j.appender.DRFA.MaxBackupIndex=30
log4j.appender.DRFA.layout=org.apache.log4j.PatternLayout

# Pattern format: Date LogLevel LoggerName LogMessage
log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} - %m%n
# Debugging Pattern format: Date LogLevel LoggerName (FileName:MethodName:LineNo) LogMessage
#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n


#
# stdout
# Add *stdout* to rootlogger above if you want to use this 
#

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n

#
# plain layout used for commandline tools to output to console
#
log4j.appender.cmdstdout=org.apache.log4j.ConsoleAppender
log4j.appender.cmdstdout.layout=org.apache.log4j.PatternLayout
log4j.appender.cmdstdout.layout.ConversionPattern=%m%n

#
# Rolling File Appender
#

#log4j.appender.RFA=org.apache.log4j.RollingFileAppender

# Logfile size and and 30-day backups
#log4j.appender.RFA.MaxFileSize=1MB
#log4j.appender.RFA.MaxBackupIndex=30

#log4j.appender.RFA.layout=org.apache.log4j.PatternLayout
#log4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} - %m%n
#log4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n

#
# Plugin-Specific Loggers
#
#log4j.logger.org.apache.nutch.indexwriter.elasticrest.ElasticRestIndexWriter=${log_level},cmdstdout
